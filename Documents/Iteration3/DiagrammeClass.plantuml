@startuml Diagramme
Interface Sujet
{
    + enregistrerObservateur(Observateur) : void
    + supprimerObservateur(Observateur) : void
    + notifierObservateurs() : void
}

Interface Observateur
{
    + actualiser(Sujet) : void
}

class Modele
{
    + enregistrerObservateur(Observateur) : void
    + supprimerObservateur(Observateur) : void
    + notifierObservateurs() : void
}

Sujet <|.. Modele

class VueDossier
{
    + VueDossier() : void
    + actualiser(Sujet) : void
}

class VueClasse
{
    + VueClasse() : void
    + actualiser(Sujet) : void
}

class VueMenuContextuel
{
    + VueMenuContextuel() : void
    + actualiser(Sujet) : void
}
class VueDiagrammeClasse
{
    + VueDiagrammeClasse() : void
    + actualiser(Sujet) : void
}

Observateur <|.. VueDossier
Observateur <|.. VueClasse
Observateur <|.. VueMenuContextuel
Observateur <|.. VueDiagrammeClasse

class ControleurNewClasse
{
    + ControleurBoutonMenus(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurBoutonArborescence
{
    + ControleurBoutonArborescence(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurCliqueDroit
{
    + ControleurCliqueDroit(Sujet s)
    + handle(ActionEvent) : void
} 

class ControleurBoutonsAffichage
{
    + ControleurBoutonsAffichage(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurBoutonOpenFile
{
    + ControleurBoutonOpenFile(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurBoutonOuvrirDossier
{
    + ControleurBoutonOuvrirDossier(Sujet s)
    + handle(ActionEvent) : void
}

Modele "0..1" <-- ControleurNewClasse : -modele
Modele "0..1" <-- ControleurBoutonArborescence : -modele
Modele "0..1" <-- ControleurCliqueDroit : -modele
Modele "0..1" <-- ControleurBoutonsAffichage : -modele
Modele "0..1" <-- ControleurBoutonOpenFile : -modele
Modele "0..1" <-- ControleurBoutonOuvrirDossier : -modele

class Fichier
{
    - nom : String
    - chemin : String
    + Fichier(String, String)
    + getChemin() : String
    + getNom() : String
}

class Classe
{
    - compositionClasse : ArrayList<CompositionClasse>
    - type : String
    - superClasse : String
    - interfaces : ArrayList<String>
    + Classe(ArrayList<CompositionClasse>, String, String, String, ArrayList<String>)
    + lectureFichier() : void
}

class Dossier
{
    + Dossier(String, int, String)
    + lectureDossier() : void
}

abstract CompositionClasse
{
    - acces : String
    - nom : String
    - type : String
    + getAcces() : String
    + getNom() : String
}

class Attributs
{
    - definition : String
    - typeAttribut : String
    + Attributs(String, String, String)
    + getAcces() : String
    + getNom() : String
    + getType() : String
}

class Methodes
{
    - definition : String
    - retour : String
    - parametres : ArrayList<String>
    + Methodes(String, String, String)
    + getAcces() : String
    + getNom() : String
    + getRetour() : String
    + getParametres() : ArrayList<String>
}

class Constructeurs
{
    - parametres : ArrayList<String>
    + Constructeurs(String, String)
    + getAcces() : String
    + getNom() : String
    + getParametres() : ArrayList<String>
}

class LectureFichier
{
    - LectureFichier()
    + {static} lireFichier(String, String) : Class
}

class TrouverCheminOS
{
    - TrouverCheminOS()
    + {static} getChemin(String) : String
}

CompositionClasse <|-- Attributs
CompositionClasse <|-- Methodes
CompositionClasse <|-- Constructeurs

Classe --> "1..*" CompositionClasse



Fichier <|-- Dossier
Dossier --> "1..*" Fichier : -ListeFichier
Fichier <|-- Classe

Modele --> Fichier : - listeFichiers
Modele --> Observateur : - listeObservateurs

@enduml