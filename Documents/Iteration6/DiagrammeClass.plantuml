@startuml Diagramme
Interface Sujet
{
    + enregistrerObservateur(Observateur) : void
    + supprimerObservateur(Observateur) : void
    + notifierObservateurs() : void
}

Interface Observateur
{
    + actualiser(Sujet) : void
}

class Modele
{
    - clear : boolean
    - cheminArborescence : String
    - startX : int
    - startY : int
    + enregistrerObservateur(Observateur) : void
    + supprimerObservateur(Observateur) : void
    + notifierObservateurs() : void
    + chercherParentsEtInterface() : void
}

Sujet <|.. Modele

class VueDossier
{
    + VueDossier() : void
    + actualiser(Sujet) : void
}

class VueClasse
{
    + VueClasse() : void
    + actualiser(Sujet) : void
}

class VueAttribut
{
    - startX : int
    - startY : int
    - classe : Classe
    - drag : StackPane
    - title : TextField
    - attributs : VBox
    - methodes : VBox
    - sujet : Sujet
    - visible : Boolean
    - boutonVisible : Button
    - coordX : int
    - coordY : int
    - width : int 
    - height : int
    + VueClasse() : void
    + actualiser() : void
    + afficherMenuDependance() : ScrollPane
    + affichage() : void
}

class VueMethode
{
    - contenueAttribut : VBox 
    - nomAttribut : TextField
    - supprimerAttribut : Button
    - classe : Classe
    + VueMethode() : void
}

class VueDiagrammeClasse
{
    + VueDiagrammeClasse() : void
    + actualiser(Sujet) : void
}
class DecorateurFleche
{
    + DecorateurFleche() : void
    + actualiser(Sujet) : void
}
class VueFlechePleine
{
    + VueFleche() : void
}
class VueFlechePointille
{
    + VueFlechePointille() : void
}
class DecorateurFinFleche
{
    + DecorateurFinFleche() : void
    + actualiser(Sujet) : void
}
class FinFlecheRempli
{
    + FinFlecheRempli() : void
}
class FinFlecheVide
{
    + FinFlecheVide() : void
}

class VueFleche
{
    + VueFleche() : void
}

Observateur <|.. VueDossier
Observateur <|.. VueClasse
Observateur <|.. VueDiagrammeClasse
Observateur <|.. DecorateurFleche
Observateur <|.. DecorateurFinFleche
Observateur <|.. VueAttribut
Observateur <|.. VueMethode
Observateur <|.. VueFleche
DecorateurFleche <|-- VueFlechePleine
DecorateurFleche <|-- VueFlechePointille
DecorateurFinFleche <|-- FinFlecheRempli
DecorateurFinFleche <|-- FinFlecheVide

class ControleurNewClasse
{
    + ControleurBoutonMenus(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurBoutonArborescence
{
    + ControleurBoutonArborescence(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurCliqueDroitClasse
{
    + ControleurCliqueDroitClasse(Sujet s)
    + handle(ActionEvent) : void
} 

class ControleurBoutonsAffichage
{
    + ControleurBoutonsAffichage(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurBoutonOpenFile
{
    + ControleurBoutonOpenFile(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurBoutonOuvrirDossier
{
    + ControleurBoutonOuvrirDossier(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurCliqueDroitElement
{
    + ControleurCliqueDroitElement(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurBoutonClear
{
    + ControleurBoutonClear(Sujet s)
    + handle(ActionEvent) : void
}

class ControleurAffichageOeil
{
    - sujet : Sujet
    - btn : Bouton
    - pressed : Boolean
    + ControleurBoutonAffichageOeil() : void
    + handle(ActionEvent) : void
}

class ControleurBoutonEnregistrer
{
    - sujet : Sujet
    + ControleurBoutonEnregistrer() : void
    + handle(ActionEvent) : void
}

class ControleurBoutonPaletteCouleur
{
    - sujet : Sujet
    + ControleurBoutonPaletteCouleur() : void
    + handle(ActionEvent) : void
}

class ControleurBoutonRecharger
{
    - sujet : Sujet
    + ControleurBoutonRecharger() : void
    + handle(ActionEvent) : void
}


Modele "0..1" <-- ControleurNewClasse : -modele
Modele "0..1" <-- ControleurBoutonArborescence : -modele
Modele "0..1" <-- ControleurCliqueDroitClasse : -modele
Modele "0..1" <-- ControleurBoutonsAffichage : -modele
Modele "0..1" <-- ControleurBoutonOpenFile : -modele
Modele "0..1" <-- ControleurBoutonOuvrirDossier : -modele
Modele "0..1" <-- ControleurCliqueDroitElement : -modele
Modele "0..1" <-- ControleurBoutonClear : -modele
Modele "0..1" <-- ControleurAffichageOeil : -modele
Modele "0..1" <-- ControleurBoutonEnregistrer : -modele
Modele "0..1" <-- ControleurBoutonPaletteCouleur : -modele
Modele "0..1" <-- ControleurBoutonRecharger : -modele

class Fichier
{
    - nom : String
    - chemin : String
    + Fichier(String, String)
    + getChemin() : String
    + getNom() : String
}

class Classe
{
    - compositionClasse : ArrayList<CompositionClasse>
    - type : String
    - superClasse : String
    - interfaces : ArrayList<String>
    + Classe(ArrayList<CompositionClasse>, String, String, String, ArrayList<String>)
    + lectureFichier() : void
}

class Dossier
{
    + Dossier(String, int, String)
    + lectureDossier() : void
}

abstract CompositionClasse
{
    - acces : String
    - nom : String
    - type : String
    + getAcces() : String
    + getNom() : String
}

class Attributs
{
    - definition : String
    + Attributs(String, String, String, String)
    + getAcces() : String
    + getNom() : String
    + getType() : String
}

class Methodes
{
    - definition : String
    - retour : String
    - parametres : ArrayList<String>
    + Methodes(String, String, String)
    + getAcces() : String
    + getNom() : String
    + getRetour() : String
    + getParametres() : ArrayList<String>
}

class Constructeurs
{
    - parametres : ArrayList<String>
    + Constructeurs(String, String)
    + getAcces() : String
    + getNom() : String
    + getParametres() : ArrayList<String>
}

class LectureFichier
{
    - LectureFichier()
    + {static} lireFichier(String, String) : Class
}

class MoyValue
{
    - nbFilsSuper : int
    - nbFilsImplements : int
    + ajouterFilsSuper() : void
    + ajouterFilsImplements() : void
    + getValue() : double
}

class TrouverCheminOS
{
    - TrouverCheminOS()
    + {static} getChemin(String) : String
}

CompositionClasse <|-- Attributs
CompositionClasse <|-- Methodes
CompositionClasse <|-- Constructeurs

Classe --> "1..*" CompositionClasse



Fichier <|-- Dossier
Dossier --> "1..*" Fichier : -ListeFichier
Fichier <|-- Classe

Modele --> Fichier : - listeFichiers
Modele --> Observateur : - listeObservateurs

@enduml